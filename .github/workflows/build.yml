# Source: https://github.com/BtbN/FFmpeg-Builds/blob/7b6432add41f4f8a47592f1e1de73ca182e4cc5c/.github/workflows/build.yml

name: Build Tetris

on:
  push:
    # https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#onpushpull_requestpull_request_targetpathspaths-ignore
    # https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#filter-pattern-cheat-sheet
    paths-ignore:
      - '**.md'
      - '.gitignore'
      - '.gitattributes'
      - '.vscode/**'
      - '.devcontainer/**'
      - 'LICENSE'
  workflow_dispatch:
    inputs:
      doRelease:
        description: 'Publish new release'
        type: boolean
        required: false
      buildOnly:
        description: 'Only build tetris'
        type: boolean
        default: false
        required: false

jobs:
  pre_check:
    name: Pre Checks
    if: ${{ github.event.inputs.buildOnly != 'true' }}
    runs-on: ubuntu-latest
    steps:
      - name: Repo Check
        run: |
          if [[ "$GITHUB_REPOSITORY" != "ziloka/tetris" ]]; then
            echo "When forking this repository to make your own builds, you have to adjust this check."
            echo "When doing so make sure to randomize the scheduled cron time above, in order to spread out the various build times as much as possible."
            echo "This has been put in place due to the enormous amounts of traffic hundreds/thousands of parallel builds can cause on external infrastructure."
            exit 1
          fi
          exit 0
  build_tetris:
    name: Build tetris
    if: ${{ ( github.event.inputs.buildOnly == 'true' && !cancelled() ) || success() }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        # https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners#supported-runners-and-hardware-resources
        os: [macos-latest, windows-latest, ubuntu-latest]
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Build tetris
        run: |
          cargo build --release
      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: tetris-${{ runner.os }}-${{ runner.arch }}
          path: target/release/client.*
  publish_release:
    name: Publish release
    if: ${{ !cancelled() && needs.build_tetris.result == 'success' }}
    needs: build_tetris
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          path: artifacts
      - name: Create release
        id: create_release
        run: |
          set -xe
          shopt -s nullglob
          RELDATE="$(date +'%Y-%m-%d %H:%M')"
          NAME="Auto-Build $RELDATE"
          TAGNAME="autobuild-$(date +'%Y-%m-%d-%H-%M')"
          gh release create "$TAGNAME" --target "master" --title "$NAME" artifacts/tetris-*-*.{zip,tar.xz}
          echo "tag_name=${TAGNAME}" >> $GITHUB_OUTPUT
          echo "rel_date=${RELDATE}" >> $GITHUB_OUTPUT
        env:
          GITHUB_TOKEN: ${{ github.token }}